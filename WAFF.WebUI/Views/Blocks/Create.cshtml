@model WAFF.DataAccess.Entity.Block

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Block</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.BlockStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlockStart)
                @Html.ValidationMessageFor(model => model.BlockStart)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlockEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlockEnd)
                @Html.ValidationMessageFor(model => model.BlockEnd)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlockLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlockLocation)
                @Html.ValidationMessageFor(model => model.BlockLocation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlockType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
         {
             Text = "Voting",
             Value = "Voting",
             Selected = true
         });
    listItems.Add(new SelectListItem
         {
             Text = "Feature",
             Value = "Feature"
         });
    listItems.Add(new SelectListItem
         {
             Text = "Workshop",
             Value = "Workshop"
         });
                }

                @Html.DropDownListFor(model => model.BlockType, listItems, "-- Select Type --")
                @Html.ValidationMessageFor(model => model.BlockType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventID)
                @Html.ValidationMessageFor(model => model.EventID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlockDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlockDescription)
                @Html.ValidationMessageFor(model => model.BlockDescription)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
